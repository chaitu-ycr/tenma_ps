name: publish-release-build

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  publish-release-build:
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade uv
          uv sync --link-mode=copy
          uv build

      - name: Read Version, Create Tag, and Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $PKG_VERSION = (poetry version --short)
          $TAG_NAME = "v$PKG_VERSION"

          # Create and push the Git tag
          git tag $TAG_NAME
          git push origin $TAG_NAME

          # Construct the release payload
          $releasePayload = @{
            tag_name = $TAG_NAME
            target_commitish = "main" # or your default branch
            name = "$TAG_NAME"
            body = "Description of the release" # Customize this
            draft = $false
            prerelease = $false # or $true based on your needs
          } | ConvertTo-Json -Compress # Use -Compress for cleaner JSON

          # Create the GitHub release
          $releaseUrl = "https://api.github.com/repos/${{ github.repository }}/releases"
          Invoke-RestMethod -Uri $releaseUrl -Method Post -Headers @{
            Authorization = "token $env:GITHUB_TOKEN"
            Accept = "application/vnd.github.v3+json"
          } -Body $releasePayload -ContentType "application/json"
        shell: pwsh

      # Uncomment the following step to publish to PyPi
      # - name: Publish to PyPi
      #   env:
      #     UV_PYPI_TOKEN_PYPI: ${{ secrets.UV_PYPI_TOKEN_PYPI }}
      #   run: uv publish
